/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.14.v20181114
 * Generated at: 2018-12-20 08:41:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.template.manage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\r\n");
      out.write("    <title>后台登录</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/layuiAdmin-master/static/admin/layui/css/layui.css \" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/layuiAdmin-master/static/admin/css/login.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"m-login-bg\">\r\n");
      out.write("    <div class=\"m-login\">\r\n");
      out.write("        <h3>后台系统登录</h3>\r\n");
      out.write("        <div class=\"m-login-warp\">\r\n");
      out.write("            <form class=\"layui-form\" action=\"/test/tologin/login\" method=\"post\">\r\n");
      out.write("                <div class=\"layui-form-item\">\r\n");
      out.write("                    <input type=\"text\" name=\"id\" required lay-verify=\"required\" placeholder=\"用户名\" autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"layui-form-item\">\r\n");
      out.write("                    <input type=\"text\" name=\"password\" required lay-verify=\"required\" placeholder=\"密码\" autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"layui-form-item\">\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("\r\n");
      out.write("                        <input type=\"text\" name=\"verity\"  required lay-verify=\"required\" placeholder=\"验证码\" autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        ");
      out.write("\r\n");
      out.write("                        <img class=\"verifyImg\" onclick=\"this.src=this.src+'?c='+Math.random();\" src=\"/test/tologin/captche\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"layui-form-item m-login-btn\">\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("\r\n");
      out.write("                        <button class=\"layui-btn layui-btn-normal\" lay-submit lay-filter=\"login\">登录</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        <button type=\"reset\" class=\"layui-btn layui-btn-primary\">取消</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        <p class=\"copyright\">Copyright 2015-2016 by XIAODU</p>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"../static/layuiAdmin-master/static/admin/layui/layui.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    layui.use(['form', 'layedit', 'laydate'], function() {\r\n");
      out.write("        var form = layui.form(),\r\n");
      out.write("            layer = layui.layer;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        //自定义验证规则\r\n");
      out.write("        form.verify({\r\n");
      out.write("            title: function(value) {\r\n");
      out.write("                if(value.length < 5) {\r\n");
      out.write("                    return '标题至少得5个字符啊';\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            password: [/(.+){6,12}$/, '密码必须6到12位'],\r\n");
      out.write("            verity: [/(.+){6}$/, '验证码必须是6位'],\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        //监听提交\r\n");
      out.write("      /*  form.on('submit(login)', function(data) {\r\n");
      out.write("            layer.alert(JSON.stringify(data.field), {\r\n");
      out.write("                title: '最终的提交信息'\r\n");
      out.write("            })\r\n");
      out.write("            return false;\r\n");
      out.write("        });*/\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
