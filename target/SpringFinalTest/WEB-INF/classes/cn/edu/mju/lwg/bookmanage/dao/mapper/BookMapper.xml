<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.mju.lwg.bookmanage.dao.IBookDao">

    <resultMap id="result" type="cn.edu.mju.lwg.bookmanage.entity.Book">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"></id>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"></result>
        <result property="inventory" column="inventory" javaType="Integer" jdbcType="INTEGER"></result>
        <result property="status" column="status" javaType="Boolean" jdbcType="TINYINT"></result>
        <result property="user_id" column="user_id" javaType="String" jdbcType="VARCHAR"></result>
        <result property="start_date" column="start_date" javaType="Date" jdbcType="DATE"></result>
        <result property="deadline" column="deadline" javaType="Date" jdbcType="DATE"></result>
        <collection property="users" ofType="cn.edu.mju.lwg.bookmanage.entity.User"
                    column="id"
                    select="cn.edu.mju.lwg.bookmanage.dao.IUserDao.findByUserId">
        </collection>
    </resultMap>

    <insert id="insert" parameterType="cn.edu.mju.lwg.bookmanage.entity.Book">
        INSERT INTO book(id,name,inventory,status) VALUE (#{id},#{name},#{inventory},#{status})
    </insert>
    <delete id="delete" parameterType="String">
        DELETE FROM book WHERE id=#{id}
    </delete>
    <delete id="deleteMore" parameterType="list">
        DELETE FROM book WHERE  id in
        <foreach collection="list" close=")"  item="id" open="(" separator=",">
            #{id}
        </foreach>
    </delete>
    <update id="update" parameterType="cn.edu.mju.lwg.bookmanage.entity.Book">
        UPDATE book SET name=#{name},inventory=#{inventory},status=#{status},user_id=#{user_id} WHERE id=#{id}
    </update>

    <update id="reBack">
        UPDATE book SET inventory=inventory+1,user_id=null,status=1,deadline=#{date} WHERE id = #{id}
    </update>
    <update id="reBack2">
        UPDATE user
        SET
          book_id=null
          WHERE id=#{id}
    </update>
    <update id="rentBook">
        UPDATE book
        <set>
                inventory=inventory-1,
                user_id=#{user_id},
                start_date=#{date},
                 deadline = null
        </set>
        WHERE id=#{id}
    </update>
    <update id="rentBook2">
        UPDATE user
        SET
        book_id=#{id}
        WHERE id=#{user_id}
    </update>

    <update id="checkStatus" parameterType="String">
        UPDATE book
        SET
            status=0
        WHERE id=#{id}
    </update>



    <select id="findAll" resultType="cn.edu.mju.lwg.bookmanage.entity.Book">
    SELECT * FROM book
    </select>
    <select id="findById" parameterType="String" resultType="cn.edu.mju.lwg.bookmanage.entity.Book">
         SELECT * FROM book WHERE id=#{id}
    </select>
    <select id="findByName" parameterType="String" resultMap="result">
        SELECT * FROM book
        <where>
            <if test="_parameter != null">
                and name like concat('%' ,#{_parameter}, '%')
            </if>
        </where>
    </select>
    <select id="findByUserId" resultType="cn.edu.mju.lwg.bookmanage.entity.Book">
        SELECT * FROM book WHERE user_id=#{user_id}
    </select>
    <select id="findByBookId" parameterType="String" resultMap="result">
        SELECT * FROM book WHERE id=#{id}
    </select>
    <select id="findAllByPage" resultType="cn.edu.mju.lwg.bookmanage.entity.Book">
        SELECT * FROM book LIMIT #{start},#{count}
    </select>

</mapper>